:- module(iams3, [action/1]).

:- dynamic(action/1).
action('s3:AbortMultipartUpload').
action('s3:BypassGovernanceRetention').
action('s3:CreateAccessPoint').
action('s3:CreateAccessPointForObjectLambda').
action('s3:CreateBucket').
action('s3:CreateJob').
action('s3:CreateMultiRegionAccessPoint').
action('s3:DeleteAccessPoint').
action('s3:DeleteAccessPointForObjectLambda').
action('s3:DeleteAccessPointPolicy').
action('s3:DeleteAccessPointPolicyForObjectLambda').
action('s3:DeleteBucket').
action('s3:DeleteBucketPolicy').
action('s3:DeleteBucketWebsite').
action('s3:DeleteIntelligentTieringConfiguration').
action('s3:DeleteJobTagging').
action('s3:DeleteMultiRegionAccessPoint').
action('s3:DeleteObject').
action('s3:DeleteObjectTagging').
action('s3:DeleteObjectVersion').
action('s3:DeleteObjectVersionTagging').
action('s3:DeleteStorageLensConfiguration').
action('s3:DeleteStorageLensConfigurationTagging').
action('s3:DescribeJob').
action('s3:DescribeMultiRegionAccessPointOperation').
action('s3:GetAccelerateConfiguration').
action('s3:GetAccessPoint').
action('s3:GetAccessPointConfigurationForObjectLambda').
action('s3:GetAccessPointForObjectLambda').
action('s3:GetAccessPointPolicy').
action('s3:GetAccessPointPolicyForObjectLambda').
action('s3:GetAccessPointPolicyStatus').
action('s3:GetAccessPointPolicyStatusForObjectLambda').
action('s3:GetAccountPublicAccessBlock').
action('s3:GetAnalyticsConfiguration').
action('s3:GetBucketAcl').
action('s3:GetBucketCORS').
action('s3:GetBucketLocation').
action('s3:GetBucketLogging').
action('s3:GetBucketNotification').
action('s3:GetBucketObjectLockConfiguration').
action('s3:GetBucketOwnershipControls').
action('s3:GetBucketPolicy').
action('s3:GetBucketPolicyStatus').
action('s3:GetBucketPublicAccessBlock').
action('s3:GetBucketRequestPayment').
action('s3:GetBucketTagging').
action('s3:GetBucketVersioning').
action('s3:GetBucketWebsite').
action('s3:GetEncryptionConfiguration').
action('s3:GetIntelligentTieringConfiguration').
action('s3:GetInventoryConfiguration').
action('s3:GetJobTagging').
action('s3:GetLifecycleConfiguration').
action('s3:GetMetricsConfiguration').
action('s3:GetMultiRegionAccessPoint').
action('s3:GetMultiRegionAccessPointPolicy').
action('s3:GetMultiRegionAccessPointPolicyStatus').
action('s3:GetMultiRegionAccessPointRoutes').
action('s3:GetObject').
action('s3:GetObjectAcl').
action('s3:GetObjectAttributes').
action('s3:GetObjectLegalHold').
action('s3:GetObjectRetention').
action('s3:GetObjectTagging').
action('s3:GetObjectTorrent').
action('s3:GetObjectVersion').
action('s3:GetObjectVersionAcl').
action('s3:GetObjectVersionAttributes').
action('s3:GetObjectVersionForReplication').
action('s3:GetObjectVersionTagging').
action('s3:GetObjectVersionTorrent').
action('s3:GetReplicationConfiguration').
action('s3:GetStorageLensConfiguration').
action('s3:GetStorageLensConfigurationTagging').
action('s3:GetStorageLensDashboard').
action('s3:InitiateReplication').
action('s3:ListAccessPoints').
action('s3:ListAccessPointsForObjectLambda').
action('s3:ListAllMyBuckets').
action('s3:ListBucket').
action('s3:ListBucketMultipartUploads').
action('s3:ListBucketVersions').
action('s3:ListJobs').
action('s3:ListMultipartUploadParts').
action('s3:ListMultiRegionAccessPoints').
action('s3:ListStorageLensConfigurations').
action('s3-object-lambda:AbortMultipartUpload').
action('s3-object-lambda:DeleteObject').
action('s3-object-lambda:DeleteObjectTagging').
action('s3-object-lambda:DeleteObjectVersion').
action('s3-object-lambda:DeleteObjectVersionTagging').
action('s3-object-lambda:GetObject').
action('s3-object-lambda:GetObjectAcl').
action('s3-object-lambda:GetObjectLegalHold').
action('s3-object-lambda:GetObjectRetention').
action('s3-object-lambda:GetObjectTagging').
action('s3-object-lambda:GetObjectVersion').
action('s3-object-lambda:GetObjectVersionAcl').
action('s3-object-lambda:GetObjectVersionTagging').
action('s3-object-lambda:ListBucket').
action('s3-object-lambda:ListBucketMultipartUploads').
action('s3-object-lambda:ListBucketVersions').
action('s3-object-lambda:ListMultipartUploadParts').
action('s3-object-lambda:PutObject').
action('s3-object-lambda:PutObjectAcl').
action('s3-object-lambda:PutObjectLegalHold').
action('s3-object-lambda:PutObjectRetention').
action('s3-object-lambda:PutObjectTagging').
action('s3-object-lambda:PutObjectVersionAcl').
action('s3-object-lambda:PutObjectVersionTagging').
action('s3-object-lambda:RestoreObject').
action('s3-object-lambda:WriteGetObjectResponse').
action('s3:ObjectOwnerOverrideToBucketOwner').
action('s3:PutAccelerateConfiguration').
action('s3:PutAccessPointConfigurationForObjectLambda').
action('s3:PutAccessPointPolicy').
action('s3:PutAccessPointPolicyForObjectLambda').
action('s3:PutAccessPointPublicAccessBlock').
action('s3:PutAccountPublicAccessBlock').
action('s3:PutAnalyticsConfiguration').
action('s3:PutBucketAcl').
action('s3:PutBucketCORS').
action('s3:PutBucketLogging').
action('s3:PutBucketNotification').
action('s3:PutBucketObjectLockConfiguration').
action('s3:PutBucketOwnershipControls').
action('s3:PutBucketPolicy').
action('s3:PutBucketPublicAccessBlock').
action('s3:PutBucketRequestPayment').
action('s3:PutBucketTagging').
action('s3:PutBucketVersioning').
action('s3:PutBucketWebsite').
action('s3:PutEncryptionConfiguration').
action('s3:PutIntelligentTieringConfiguration').
action('s3:PutInventoryConfiguration').
action('s3:PutJobTagging').
action('s3:PutLifecycleConfiguration').
action('s3:PutMetricsConfiguration').
action('s3:PutMultiRegionAccessPointPolicy').
action('s3:PutObject').
action('s3:PutObjectAcl').
action('s3:PutObjectLegalHold').
action('s3:PutObjectRetention').
action('s3:PutObjectTagging').
action('s3:PutObjectVersionAcl').
action('s3:PutObjectVersionTagging').
action('s3:PutReplicationConfiguration').
action('s3:PutStorageLensConfiguration').
action('s3:PutStorageLensConfigurationTagging').
action('s3:ReplicateDelete').
action('s3:ReplicateObject').
action('s3:ReplicateTags').
action('s3:RestoreObject').
action('s3:SubmitMultiRegionAccessPointRoutes').
action('s3:UpdateJobPriority').
action('s3:UpdateJobStatus').
